{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["searchClient","algoliasearch","CustomRangeSlider","connectRange","min","max","currentRefinement","canRefine","refine","React","useState","stateMin","setStateMin","stateMax","setStateMax","useEffect","values","onChange","onValuesUpdated","className","style","left","right","Hit","props","src","hit","image","align","alt","name","Highlight","attribute","domain","year","quality","type","price","App","InstantSearch","indexName","SearchBox","ClearRefinements","RefinementList","SortBy","defaultRefinement","items","label","value","Configure","hitsPerPage","Hits","hitComponent","Pagination","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51789bd9.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\nimport {\n  InstantSearch,\n  Hits,\n  SearchBox,\n  Pagination,\n  Highlight,\n  ClearRefinements,\n  RefinementList,\n  Configure,\n  SortBy\n} from 'react-instantsearch-dom';\nimport algoliasearch from 'algoliasearch/lite';\nimport Rheostat from 'rheostat';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { connectRange } from 'react-instantsearch-dom';\nimport 'rheostat/initialize';\nimport 'rheostat/css/rheostat.css';\n\nconst searchClient = algoliasearch(\"1DDP2SO5ID\", \"97fa4f0a39cda3d338bc74dc2d4214ff\");\n\nconst RangeSlider = ({ min, max, currentRefinement, canRefine, refine }) => {\n  const [stateMin, setStateMin] = React.useState(min);\n  const [stateMax, setStateMax] = React.useState(max);\n\n  React.useEffect(() => {\n    if (canRefine) {\n      setStateMin(currentRefinement.min);\n      setStateMax(currentRefinement.max);\n    }\n  }, [currentRefinement.min, currentRefinement.max]);\n\n  if (min === max) {\n    return null;\n  }\n\n  const onChange = ({ values: [min, max] }) => {\n    if (currentRefinement.min !== min || currentRefinement.max !== max) {\n      refine({ min, max });\n    }\n  };\n\n  const onValuesUpdated = ({ values: [min, max] }) => {\n    setStateMin(min);\n    setStateMax(max);\n  };\n\n  return (\n    <Rheostat\n      min={min}\n      max={max}\n      values={[currentRefinement.min, currentRefinement.max]}\n      onChange={onChange}\n      onValuesUpdated={onValuesUpdated}\n    >\n      <div\n        className=\"rheostat-marker rheostat-marker--large\"\n        style={{ left: 0 }}\n      >\n        <div className=\"rheostat-value\">{stateMin}</div>\n      </div>\n      <div\n        className=\"rheostat-marker rheostat-marker--large\"\n        style={{ right: 0 }}\n      >\n        <div className=\"rheostat-value\">{stateMax}</div>\n      </div>\n    </Rheostat>\n  );\n};\n\nconst CustomRangeSlider = connectRange(RangeSlider);\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <div className=\"ais-InstantSearch\">\n        <InstantSearch indexName=\"wine\" searchClient={searchClient}>\n          <div className=\"ais-SearchZone\">\n            <div className=\"title-text\">Wine Search</div>\n            <SearchBox />\n          </div>\n          <div className=\"ais-PanelZone\">\n            <div className=\"left-panel\">\n              <ClearRefinements />\n              <h2>Region</h2>\n              <RefinementList attribute=\"domain\" />\n              <h2>Year</h2>\n              <CustomRangeSlider attribute=\"year\" />\n              <h2>Sort</h2>\n              <SortBy\n                defaultRefinement=\"wine\"\n                items={[\n                  {label: 'Default', value: 'wine'},\n                  {label: 'Price (asc)', value: 'wine_price_asc'},\n                  {label: 'Price (dsc)', value: 'wine_price_dsc'}\n              ]}\n              />\n              <Configure hitsPerPage={8} />\n            </div>\n            <div className=\"right-panel\">\n              <Hits hitComponent={Hit} />\n              <Pagination />\n            </div>\n          </div>\n        </InstantSearch>\n      </div>\n    );\n  }\n}\n\nfunction Hit(props) {\n  return (\n    <div>\n      <img src={props.hit.image} align=\"left\" alt={props.hit.name} />\n      <div className=\"hit-name\">\n        <Highlight attribute=\"name\" hit={props.hit} />\n      </div>\n      <div className=\"hit-domain\">{props.hit.domain}</div>\n      <div className=\"hit-year\">{props.hit.year}</div>\n      <div className=\"hit-quality\">{props.hit.quality}</div>\n      <div className=\"hit-type\">{props.hit.type}</div>\n      <div className=\"hit-price\">â‚¬{props.hit.price}</div>\n    </div>\n  );\n}\n\nHit.propTypes = {\n  hit: PropTypes.object.isRequired,\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}